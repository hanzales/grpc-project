<?xml version="1.0"?>
<doc>
    <assembly>
        <name>grpc-project</name>
    </assembly>
    <members>
        <member name="T:grpc_project.PersonReflection">
            <summary>Holder for reflection information generated from Protos/person.proto</summary>
        </member>
        <member name="P:grpc_project.PersonReflection.Descriptor">
            <summary>File descriptor for Protos/person.proto</summary>
        </member>
        <member name="F:grpc_project.PersonRequest.NameFieldNumber">
            <summary>Field number for the "name" field.</summary>
        </member>
        <member name="P:grpc_project.PersonRequest.Name">
             <summary>
            Person name
             </summary>
        </member>
        <member name="F:grpc_project.PersonRequest.SurnameFieldNumber">
            <summary>Field number for the "surname" field.</summary>
        </member>
        <member name="F:grpc_project.PersonResponse.MessageFieldNumber">
            <summary>Field number for the "message" field.</summary>
        </member>
        <member name="T:grpc_project.Person">
             <summary>
            Person service
             </summary>
        </member>
        <member name="P:grpc_project.Person.Descriptor">
            <summary>Service descriptor</summary>
        </member>
        <member name="T:grpc_project.Person.PersonBase">
            <summary>Base class for server-side implementations of Person</summary>
        </member>
        <member name="M:grpc_project.Person.PersonBase.CreatePerson(grpc_project.PersonRequest,Grpc.Core.ServerCallContext)">
             <summary>
            Person creater service
             </summary>
             <param name="request">The request received from the client.</param>
             <param name="context">The context of the server-side call handler being invoked.</param>
             <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="T:grpc_project.Person.PersonClient">
            <summary>Client for Person</summary>
        </member>
        <member name="M:grpc_project.Person.PersonClient.#ctor(Grpc.Core.ChannelBase)">
            <summary>Creates a new client for Person</summary>
            <param name="channel">The channel to use to make remote calls.</param>
        </member>
        <member name="M:grpc_project.Person.PersonClient.#ctor(Grpc.Core.CallInvoker)">
            <summary>Creates a new client for Person that uses a custom <c>CallInvoker</c>.</summary>
            <param name="callInvoker">The callInvoker to use to make remote calls.</param>
        </member>
        <member name="M:grpc_project.Person.PersonClient.#ctor">
            <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
        </member>
        <member name="M:grpc_project.Person.PersonClient.#ctor(Grpc.Core.ClientBase.ClientBaseConfiguration)">
            <summary>Protected constructor to allow creation of configured clients.</summary>
            <param name="configuration">The client configuration.</param>
        </member>
        <member name="M:grpc_project.Person.PersonClient.CreatePerson(grpc_project.PersonRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
             <summary>
            Person creater service
             </summary>
             <param name="request">The request to send to the server.</param>
             <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
             <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
             <param name="cancellationToken">An optional token for canceling the call.</param>
             <returns>The response received from the server.</returns>
        </member>
        <member name="M:grpc_project.Person.PersonClient.CreatePerson(grpc_project.PersonRequest,Grpc.Core.CallOptions)">
             <summary>
            Person creater service
             </summary>
             <param name="request">The request to send to the server.</param>
             <param name="options">The options for the call.</param>
             <returns>The response received from the server.</returns>
        </member>
        <member name="M:grpc_project.Person.PersonClient.CreatePersonAsync(grpc_project.PersonRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
             <summary>
            Person creater service
             </summary>
             <param name="request">The request to send to the server.</param>
             <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
             <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
             <param name="cancellationToken">An optional token for canceling the call.</param>
             <returns>The call object.</returns>
        </member>
        <member name="M:grpc_project.Person.PersonClient.CreatePersonAsync(grpc_project.PersonRequest,Grpc.Core.CallOptions)">
             <summary>
            Person creater service
             </summary>
             <param name="request">The request to send to the server.</param>
             <param name="options">The options for the call.</param>
             <returns>The call object.</returns>
        </member>
        <member name="M:grpc_project.Person.PersonClient.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)">
            <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
        </member>
        <member name="M:grpc_project.Person.BindService(grpc_project.Person.PersonBase)">
            <summary>Creates service definition that can be registered with a server</summary>
            <param name="serviceImpl">An object implementing the server-side handling logic.</param>
        </member>
        <member name="M:grpc_project.Person.BindService(Grpc.Core.ServiceBinderBase,grpc_project.Person.PersonBase)">
            <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
            Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
            <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
            <param name="serviceImpl">An object implementing the server-side handling logic.</param>
        </member>
        <member name="T:grpc_project.MessageReflection">
            <summary>Holder for reflection information generated from Protos/message.proto</summary>
        </member>
        <member name="P:grpc_project.MessageReflection.Descriptor">
            <summary>File descriptor for Protos/message.proto</summary>
        </member>
        <member name="F:grpc_project.MessageRequest.TextFieldNumber">
            <summary>Field number for the "text" field.</summary>
        </member>
        <member name="F:grpc_project.MessageReply.TextFieldNumber">
            <summary>Field number for the "text" field.</summary>
        </member>
        <member name="P:grpc_project.Message.Descriptor">
            <summary>Service descriptor</summary>
        </member>
        <member name="T:grpc_project.Message.MessageBase">
            <summary>Base class for server-side implementations of Message</summary>
        </member>
        <member name="T:grpc_project.Message.MessageClient">
            <summary>Client for Message</summary>
        </member>
        <member name="M:grpc_project.Message.MessageClient.#ctor(Grpc.Core.ChannelBase)">
            <summary>Creates a new client for Message</summary>
            <param name="channel">The channel to use to make remote calls.</param>
        </member>
        <member name="M:grpc_project.Message.MessageClient.#ctor(Grpc.Core.CallInvoker)">
            <summary>Creates a new client for Message that uses a custom <c>CallInvoker</c>.</summary>
            <param name="callInvoker">The callInvoker to use to make remote calls.</param>
        </member>
        <member name="M:grpc_project.Message.MessageClient.#ctor">
            <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
        </member>
        <member name="M:grpc_project.Message.MessageClient.#ctor(Grpc.Core.ClientBase.ClientBaseConfiguration)">
            <summary>Protected constructor to allow creation of configured clients.</summary>
            <param name="configuration">The client configuration.</param>
        </member>
        <member name="M:grpc_project.Message.MessageClient.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)">
            <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
        </member>
        <member name="M:grpc_project.Message.BindService(grpc_project.Message.MessageBase)">
            <summary>Creates service definition that can be registered with a server</summary>
            <param name="serviceImpl">An object implementing the server-side handling logic.</param>
        </member>
        <member name="M:grpc_project.Message.BindService(Grpc.Core.ServiceBinderBase,grpc_project.Message.MessageBase)">
            <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
            Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
            <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
            <param name="serviceImpl">An object implementing the server-side handling logic.</param>
        </member>
    </members>
</doc>
